{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _toArray from \"/Users/sandeeppasunuri/workspace/next-apollo-demo/client/node_modules/@babel/runtime/helpers/esm/toArray\";\nimport _taggedTemplateLiteral from \"/Users/sandeeppasunuri/workspace/next-apollo-demo/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/sandeeppasunuri/workspace/next-apollo-demo/client/pages/users.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query Query($offset: Int, $limit: Int){\\n        users(offset:$offset, limit:$limit) {\\n            count\\n            result {\\n                name,\\n                email,\\n                phone,\\n                address {\\n                    street,\\n                    zipcode,\\n                    city\\n                }\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { gql } from \"@apollo/client\";\nimport { withApollo } from '@apollo/client/react/hoc';\nimport { default as LinkTo } from 'next/link';\nimport { Grid, Column, Row, Heading1, UserCard, Button, Link } from '../components';\nimport useCustomQuery from \"../hooks/useCustomQuery\";\nvar QUERY = gql(_templateObject());\n\nvar Page = function Page() {\n  _s();\n\n  var options = {\n    variables: {\n      offset: 0,\n      limit: 10\n    }\n  };\n\n  var _useCustomQuery = useCustomQuery(QUERY, options),\n      _useCustomQuery2 = _toArray(_useCustomQuery);\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 25\n  }, _this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"Failed to load...!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 23\n  }, _this);\n  var _data = data,\n      result = _data.users.result;\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Column, {\n        className: \"mt-4\",\n        children: /*#__PURE__*/_jsxDEV(Heading1, {\n          children: [/*#__PURE__*/_jsxDEV(LinkTo, {\n            href: \"/\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              title: \"Home\",\n              children: \"Home\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 48\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 31\n          }, _this), \" / Users\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(Row, {\n      children: result.map(function (user) {\n        return /*#__PURE__*/_jsxDEV(Column, {\n          medium: 6,\n          children: /*#__PURE__*/_jsxDEV(UserCard, {\n            user: user\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, _this)\n        }, user.phone, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, _this), hasMore && /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Column, {\n        style: {\n          textAlign: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: loadMore,\n          className: \"my-4 ml-auto\",\n          children: \"Load more\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(Page, \"nH0Sd+WMrodNmHCJOd3ICWqtw4k=\", false, function () {\n  return [useCustomQuery];\n});\n\n_c = Page;\nexport default _c2 = withApollo(Page);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Page\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/sandeeppasunuri/workspace/next-apollo-demo/client/pages/users.tsx"],"names":["gql","withApollo","default","LinkTo","Grid","Column","Row","Heading1","UserCard","Button","Link","useCustomQuery","QUERY","Page","options","variables","offset","limit","loading","error","data","result","users","map","user","phone","hasMore","textAlign","loadMore"],"mappings":";;;;;;;;;;;;;;;;;;AACA,SAAmBA,GAAnB,QAA8B,gBAA9B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,OAAO,IAAIC,MAApB,QAAkC,WAAlC;AACA,SACIC,IADJ,EACUC,MADV,EACkBC,GADlB,EACuBC,QADvB,EACiCC,QADjC,EAC2CC,MAD3C,EACmDC,IADnD,QAEO,eAFP;AAGA,OAAOC,cAAP,MAA2B,yBAA3B;AAEA,IAAMC,KAAK,GAAGZ,GAAH,mBAAX;;AAkBA,IAAMa,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA;;AACf,MAAMC,OAAO,GAAG;AACZC,IAAAA,SAAS,EAAE;AACPC,MAAAA,MAAM,EAAE,CADD;AAEPC,MAAAA,KAAK,EAAE;AAFA;AADC,GAAhB;;AADe,wBAOJN,cAAc,CAACC,KAAD,EAAQE,OAAR,CAPV;AAAA;;AASf,MAAII,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AAEb,MAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AAXI,cAaeC,IAbf;AAAA,MAaEC,MAbF,SAaPC,KAbO,CAaED,MAbF;AAef,sBACI,QAAC,IAAD;AAAA,4BACI,QAAC,GAAD;AAAA,6BACI,QAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,MAAlB;AAAA,+BACI,QAAC,QAAD;AAAA,kCAAU,QAAC,MAAD;AAAQ,YAAA,IAAI,EAAC,GAAb;AAAA,mCAAiB,QAAC,IAAD;AAAM,cAAA,KAAK,EAAC,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAjB;AAAA;AAAA;AAAA;AAAA,mBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,aADJ,eAMI;AAAA;AAAA;AAAA;AAAA,aANJ,eAOI,QAAC,GAAD;AAAA,gBACKA,MAAM,CAACE,GAAP,CAAW,UAAAC,IAAI;AAAA,4BACZ,QAAC,MAAD;AAAQ,UAAA,MAAM,EAAE,CAAhB;AAAA,iCACI,QAAC,QAAD;AAAU,YAAA,IAAI,EAAEA;AAAhB;AAAA;AAAA;AAAA;AAAA;AADJ,WAAwBA,IAAI,CAACC,KAA7B;AAAA;AAAA;AAAA;AAAA,iBADY;AAAA,OAAf;AADL;AAAA;AAAA;AAAA;AAAA,aAPJ,EAcKC,OAAO,iBACJ,QAAC,GAAD;AAAA,6BACI,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAE;AAAEC,UAAAA,SAAS,EAAE;AAAb,SAAf;AAAA,+BACI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAEC,QAAjB;AAA2B,UAAA,SAAS,EAAC,cAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,aAfR;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAwBH,CAvCD;;GAAMf,I;UAOSF,c;;;KAPTE,I;AAyCN,qBAAeZ,UAAU,CAACY,IAAD,CAAzB","sourcesContent":["import { useCallback, useEffect, useMemo } from 'react';\nimport { useQuery, gql } from \"@apollo/client\";\nimport { withApollo } from '@apollo/client/react/hoc';\nimport { default as LinkTo } from 'next/link'\nimport {\n    Grid, Column, Row, Heading1, UserCard, Button, Link\n} from '../components';\nimport useCustomQuery from \"../hooks/useCustomQuery\";\n\nconst QUERY = gql`\n    query Query($offset: Int, $limit: Int){\n        users(offset:$offset, limit:$limit) {\n            count\n            result {\n                name,\n                email,\n                phone,\n                address {\n                    street,\n                    zipcode,\n                    city\n                }\n            }\n        }\n    }\n`;\n\nconst Page = () => {\n    const options = {\n        variables: {\n            offset: 0,\n            limit: 10\n        }\n    };\n    const [] = useCustomQuery(QUERY, options);\n\n    if (loading) return <h2>Loading...</h2>;\n\n    if (error) return <h2>Failed to load...!</h2>;\n\n    const { users: { result } } = data;\n\n    return (\n        <Grid>\n            <Row>\n                <Column className=\"mt-4\">\n                    <Heading1><LinkTo href=\"/\"><Link title=\"Home\">Home</Link></LinkTo> / Users</Heading1>\n                </Column>\n            </Row>\n            <br />\n            <Row>\n                {result.map(user => (\n                    <Column medium={6} key={user.phone}>\n                        <UserCard user={user} />\n                    </Column>\n                ))}\n            </Row>\n            {hasMore && (\n                <Row>\n                    <Column style={{ textAlign: 'center' }}>\n                        <Button onClick={loadMore} className=\"my-4 ml-auto\">Load more</Button>\n                    </Column>\n                </Row>\n            )}\n        </Grid>\n    )\n};\n\nexport default withApollo(Page);\n"]},"metadata":{},"sourceType":"module"}