{"ast":null,"code":"import _defineProperty from \"/Users/sandeeppasunuri/workspace/next-apollo-demo/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { ApolloClient, InMemoryCache } from '@apollo/client';\nimport { offsetLimitPagination } from \"@apollo/client/utilities\";\nvar client = new ApolloClient({\n  uri: 'http://localhost:5000/graphql',\n  cache: new InMemoryCache({\n    typePolicies: {\n      Query: {\n        fields: {\n          getAllUsers: _objectSpread(_objectSpread({}, offsetLimitPagination()), {}, {\n            read: function read(existing, _ref) {\n              var fargs = _ref.fargs;\n              console.log(existing);\n            }\n          })\n        }\n      }\n    }\n  })\n});\nexport default client;","map":{"version":3,"sources":["/Users/sandeeppasunuri/workspace/next-apollo-demo/client/utils/apollo-client.ts"],"names":["ApolloClient","InMemoryCache","offsetLimitPagination","client","uri","cache","typePolicies","Query","fields","getAllUsers","read","existing","fargs","console","log"],"mappings":";;;;;;AAAA,SAASA,YAAT,EAAuBC,aAAvB,QAA4C,gBAA5C;AACA,SAASC,qBAAT,QAAsC,0BAAtC;AAEA,IAAMC,MAAM,GAAG,IAAIH,YAAJ,CAAiB;AAC5BI,EAAAA,GAAG,EAAE,+BADuB;AAE5BC,EAAAA,KAAK,EAAE,IAAIJ,aAAJ,CAAkB;AACrBK,IAAAA,YAAY,EAAE;AACVC,MAAAA,KAAK,EAAE;AACHC,QAAAA,MAAM,EAAE;AACJC,UAAAA,WAAW,kCACJP,qBAAqB,EADjB;AAEPQ,YAAAA,IAFO,gBAEFC,QAFE,QAEmB;AAAA,kBAATC,KAAS,QAATA,KAAS;AACtBC,cAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACH;AAJM;AADP;AADL;AADG;AADO,GAAlB;AAFqB,CAAjB,CAAf;AAkBA,eAAeR,MAAf","sourcesContent":["import { ApolloClient, InMemoryCache } from '@apollo/client';\nimport { offsetLimitPagination } from \"@apollo/client/utilities\";\n\nconst client = new ApolloClient({\n    uri: 'http://localhost:5000/graphql',\n    cache: new InMemoryCache({\n        typePolicies: {\n            Query: {\n                fields: {\n                    getAllUsers: {\n                        ...offsetLimitPagination(),\n                        read(existing, { fargs }) {\n                            console.log(existing, )\n                        }\n                    }\n                }\n            }\n        }\n    })\n});\n\nexport default client;"]},"metadata":{},"sourceType":"module"}