{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _taggedTemplateLiteral from \"/Users/sandeeppasunuri/workspace/next-apollo-demo/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/sandeeppasunuri/workspace/next-apollo-demo/client/pages/index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query Query($offset: Int, $limit: Int){\\n        getAllUsers(offset:$offset, limit:$limit) {\\n            count\\n            result {\\n                name,\\n                email,\\n                phone,\\n                address {\\n                    street,\\n                    zipcode,\\n                    city\\n                }\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useState, useEffect, useCallback } from 'react';\nimport { useQuery, gql } from \"@apollo/client\";\nimport Link from 'next/link';\nimport Name from '../components/Name';\nvar QUERY = gql(_templateObject());\n\nvar Page = function Page() {\n  _s();\n\n  var _useQuery = useQuery(QUERY, {\n    variables: {\n      offset: 0,\n      limit: 10\n    }\n  }),\n      _useQuery$data = _useQuery.data;\n\n  _useQuery$data = _useQuery$data === void 0 ? {} : _useQuery$data;\n  var _useQuery$data$getAll = _useQuery$data.getAllUsers;\n  _useQuery$data$getAll = _useQuery$data$getAll === void 0 ? {} : _useQuery$data$getAll;\n  var _useQuery$data$getAll2 = _useQuery$data$getAll.result,\n      result = _useQuery$data$getAll2 === void 0 ? [] : _useQuery$data$getAll2,\n      count = _useQuery$data$getAll.count,\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      fetchMore = _useQuery.fetchMore;\n  var loadMore = useCallback(function () {\n    return fetchMore({\n      variables: {\n        offset: result.length\n      }\n    });\n  }, [fetchMore, result]);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 16\n    }, _this);\n  }\n\n  if (error) {\n    console.error(error);\n    return null;\n  }\n\n  console.log(result);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Welcome, \", /*#__PURE__*/_jsxDEV(Name, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 22\n    }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 18\n    }, _this), /*#__PURE__*/_jsxDEV(Link, {\n      href: \"/about\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        children: \"About\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 33\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: loadMore,\n      children: \"Load more\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(Page, \"yQIgp94L00xUQHjXdAiuFc6kELg=\", false, function () {\n  return [useQuery];\n});\n\n_c = Page;\nexport default Page;\n\nvar _c;\n\n$RefreshReg$(_c, \"Page\");","map":{"version":3,"sources":["/Users/sandeeppasunuri/workspace/next-apollo-demo/client/pages/index.js"],"names":["useState","useEffect","useCallback","useQuery","gql","Link","Name","QUERY","Page","variables","offset","limit","data","getAllUsers","result","count","loading","error","fetchMore","loadMore","length","console","log"],"mappings":";;;;;;;;;;;;;;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,WAA9B,QAAiD,OAAjD;AACA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AAEA,IAAMC,KAAK,GAAGH,GAAH,mBAAX;;AAkBA,IAAMI,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA;;AAAA,kBAQXL,QAAQ,CACRI,KADQ,EAER;AACIE,IAAAA,SAAS,EAAE;AACPC,MAAAA,MAAM,EAAE,CADD;AAEPC,MAAAA,KAAK,EAAE;AAFA;AADf,GAFQ,CARG;AAAA,iCAEXC,IAFW;;AAAA,+CAIP,EAJO;AAAA,6CAGPC,WAHO;AAAA,6DAG+B,EAH/B;AAAA,qDAGQC,MAHR;AAAA,MAGQA,MAHR,uCAGiB,EAHjB;AAAA,MAGqBC,KAHrB,yBAGqBA,KAHrB;AAAA,MAKXC,OALW,aAKXA,OALW;AAAA,MAMXC,KANW,aAMXA,KANW;AAAA,MAOXC,SAPW,aAOXA,SAPW;AAkBf,MAAMC,QAAQ,GAAGjB,WAAW,CACxB;AAAA,WAAMgB,SAAS,CAAC;AAAET,MAAAA,SAAS,EAAE;AAAEC,QAAAA,MAAM,EAAEI,MAAM,CAACM;AAAjB;AAAb,KAAD,CAAf;AAAA,GADwB,EAExB,CAACF,SAAD,EAAYJ,MAAZ,CAFwB,CAA5B;;AAKA,MAAIE,OAAJ,EAAa;AACT,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAP;AACH;;AAED,MAAIC,KAAJ,EAAW;AACPI,IAAAA,OAAO,CAACJ,KAAR,CAAcA,KAAd;AACA,WAAO,IAAP;AACH;;AAEDI,EAAAA,OAAO,CAACC,GAAR,CAAYR,MAAZ;AACA,sBACI;AAAA,yCACa,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,aADb,eAEI;AAAA;AAAA;AAAA;AAAA,aAFJ,eAES;AAAA;AAAA;AAAA;AAAA,aAFT,eAGI,QAAC,IAAD;AAAM,MAAA,IAAI,EAAC,QAAX;AAAA,6BAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAApB;AAAA;AAAA;AAAA;AAAA,aAHJ,eAKQ;AAAQ,MAAA,OAAO,EAAEK,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aALR;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAUH,CA3CD;;GAAMX,I;UAQEL,Q;;;KARFK,I;AA6CN,eAAeA,IAAf","sourcesContent":["import { useState, useEffect, useCallback } from 'react';\nimport { useQuery, gql } from \"@apollo/client\";\nimport Link from 'next/link'\nimport Name from '../components/Name'\n\nconst QUERY = gql`\n    query Query($offset: Int, $limit: Int){\n        getAllUsers(offset:$offset, limit:$limit) {\n            count\n            result {\n                name,\n                email,\n                phone,\n                address {\n                    street,\n                    zipcode,\n                    city\n                }\n            }\n        }\n    }\n`;\n\nconst Page = () => {\n    const {\n        data: {\n            getAllUsers: { result = [], count } = {}\n        } = {},\n        loading,\n        error,\n        fetchMore\n    } = useQuery(\n        QUERY,\n        {\n            variables: {\n                offset: 0,\n                limit: 10\n            }\n        }\n    );\n\n    const loadMore = useCallback(\n        () => fetchMore({ variables: { offset: result.length } }),\n        [fetchMore, result]\n    );\n\n    if (loading) {\n        return <h2>Loading...</h2>;\n    }\n\n    if (error) {\n        console.error(error);\n        return null;\n    }\n\n    console.log(result);\n    return (\n        <div>\n            Welcome, <Name />\n            <br/><br/>\n            <Link href=\"/about\"><a>About</a></Link>\n            {\n                <button onClick={loadMore}>Load more</button>\n            }\n        </div>\n    )\n};\n\nexport default Page;\n"]},"metadata":{},"sourceType":"module"}