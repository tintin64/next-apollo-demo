{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"/Users/sandeeppasunuri/workspace/next-apollo-demo/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"/Users/sandeeppasunuri/workspace/next-apollo-demo/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/sandeeppasunuri/workspace/next-apollo-demo/client/pages/users.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query Query($offset: Int, $limit: Int){\\n        getAllUsers(offset:$offset, limit:$limit) {\\n            count\\n            result {\\n                name,\\n                email,\\n                phone,\\n                address {\\n                    street,\\n                    zipcode,\\n                    city\\n                }\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useCallback, useEffect, useMemo } from 'react';\nimport { useQuery, gql } from \"@apollo/client\";\nimport { withApollo } from '@apollo/client/react/hoc';\nimport Link from 'next/link';\nimport Name from '../components/Name';\nvar QUERY = gql(_templateObject());\n\nvar Page = function Page() {\n  _s();\n\n  var _useQuery = useQuery(QUERY, {\n    variables: {\n      offset: 0,\n      limit: 10\n    },\n    fetchPolicy: \"network-only\"\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      fetchMore = _useQuery.fetchMore,\n      client = _useQuery.client,\n      refetch = _useQuery.refetch;\n\n  useEffect(function () {\n    refetch();\n  }, []);\n  useEffect(function () {\n    return function () {\n      client.cache.modify({\n        fields: {\n          getAllUsers: function getAllUsers(value) {\n            return _objectSpread(_objectSpread({}, value), {}, {\n              result: []\n            });\n          }\n        }\n      });\n    };\n  }, [client]);\n  var loadMore = useCallback(function () {\n    return fetchMore({\n      variables: {\n        offset: data.getAllUsers.result.length\n      }\n    });\n  }, [fetchMore, data]);\n  var loadedAll = useMemo(function () {\n    if (!data) return false;\n    return data.getAllUsers.count === data.getAllUsers.result.length;\n  }, [data]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 25\n  }, _this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"Failed to load...!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 23\n  }, _this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Welcome, \", /*#__PURE__*/_jsxDEV(Name, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 22\n    }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, _this), data.getAllUsers.result.length, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, _this), data.getAllUsers.count, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(Link, {\n      href: \"/\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        children: \"Go Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 28\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, _this), !loadedAll && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: loadMore,\n      children: \"Load more\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 29\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(Page, \"Xr7Oeq0/1G/+LiHZkDtIxqaQW6Y=\", false, function () {\n  return [useQuery];\n});\n\n_c = Page;\nexport default _c2 = withApollo(Page);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Page\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/sandeeppasunuri/workspace/next-apollo-demo/client/pages/users.tsx"],"names":["useCallback","useEffect","useMemo","useQuery","gql","withApollo","Link","Name","QUERY","Page","variables","offset","limit","fetchPolicy","data","loading","error","fetchMore","client","refetch","cache","modify","fields","getAllUsers","value","result","loadMore","length","loadedAll","count"],"mappings":"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","sourcesContent":["import { useCallback, useEffect, useMemo } from 'react';\nimport { useQuery, gql } from \"@apollo/client\";\nimport { withApollo } from '@apollo/client/react/hoc';\nimport Link from 'next/link'\nimport Name from '../components/Name'\n\nconst QUERY = gql`\n    query Query($offset: Int, $limit: Int){\n        getAllUsers(offset:$offset, limit:$limit) {\n            count\n            result {\n                name,\n                email,\n                phone,\n                address {\n                    street,\n                    zipcode,\n                    city\n                }\n            }\n        }\n    }\n`;\n\nconst Page = () => {\n    const {\n        data, loading, error, fetchMore, client, refetch\n    } = useQuery(\n        QUERY,\n        {\n            variables: {\n                offset: 0,\n                limit: 10\n            },\n            fetchPolicy: \"network-only\"\n        }\n    );\n\n    useEffect(() => {\n        refetch();\n    }, []);\n\n    useEffect(() => {\n        return () => {\n            client.cache.modify({\n                fields: {\n                    getAllUsers: (value) => ({\n                        ...value,\n                        result: []\n                    })\n                }\n            });\n        }\n    }, [client]);\n\n    const loadMore = useCallback(\n        () => fetchMore({ variables: { offset: data.getAllUsers.result.length } }),\n        [fetchMore, data]\n    );\n\n    const loadedAll = useMemo(\n        () => {\n            if (!data) return false;\n            return data.getAllUsers.count === data.getAllUsers.result.length\n        },\n        [data]\n    );\n\n    if (loading) return <h2>Loading...</h2>;\n\n    if (error) return <h2>Failed to load...!</h2>;\n\n    return (\n        <div>\n            Welcome, <Name data={data} />\n            <br/>\n            {data.getAllUsers.result.length}\n            <br/>\n            {data.getAllUsers.count}\n            <br/>\n            <br/>\n\n            <Link href=\"/\"><a>Go Back</a></Link>\n            { !loadedAll && <button onClick={loadMore}>Load more</button>}\n        </div>\n    )\n};\n\nexport default withApollo(Page);\n"]},"metadata":{},"sourceType":"module"}