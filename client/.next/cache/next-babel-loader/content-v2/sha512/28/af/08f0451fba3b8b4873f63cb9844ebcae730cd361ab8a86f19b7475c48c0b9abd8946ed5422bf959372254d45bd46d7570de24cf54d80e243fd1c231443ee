{"ast":null,"code":"import _toConsumableArray from \"/Users/sandeeppasunuri/workspace/next-apollo-demo/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/Users/sandeeppasunuri/workspace/next-apollo-demo/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { offsetLimitPagination } from \"@apollo/client/utilities\";\nexport default _objectSpread(_objectSpread({}, offsetLimitPagination()), {}, {\n  read: function read(existing) {\n    return existing;\n  },\n  merge: function merge(existing, incoming) {\n    if (existing) {\n      return _objectSpread(_objectSpread({}, existing), {}, {\n        result: [].concat(_toConsumableArray(existing.result), _toConsumableArray(incoming.result))\n      });\n    }\n\n    return incoming;\n  }\n});","map":{"version":3,"sources":["/Users/sandeeppasunuri/workspace/next-apollo-demo/client/apollo-client/cache/type-policies/query/fields/user/get-all-users.ts"],"names":["offsetLimitPagination","read","existing","merge","incoming","result"],"mappings":";;;;;;;AAAA,SAASA,qBAAT,QAAsC,0BAAtC;AAEA,+CACOA,qBAAqB,EAD5B;AAEIC,EAAAA,IAAI,EAAE,cAAAC,QAAQ;AAAA,WAAKA,QAAL;AAAA,GAFlB;AAGIC,EAAAA,KAAK,EAAE,eAACD,QAAD,EAAWE,QAAX,EAAiE;AACpE,QAAIF,QAAJ,EAAc;AACV,6CACOA,QADP;AAEIG,QAAAA,MAAM,+BACCH,QAAQ,CAACG,MADV,sBAECD,QAAQ,CAACC,MAFV;AAFV;AAOH;;AACD,WAAOD,QAAP;AACH;AAdL","sourcesContent":["import { offsetLimitPagination } from \"@apollo/client/utilities\";\n\nexport default {\n    ...offsetLimitPagination(),\n    read: existing =>  existing,\n    merge: (existing, incoming):{ count: Number, result: Array<object> } => {\n        if (existing) {\n            return {\n                ...existing,\n                result: [\n                    ...existing.result,\n                    ...incoming.result\n                ]\n            };\n        }\n        return incoming;\n    }\n}"]},"metadata":{},"sourceType":"module"}