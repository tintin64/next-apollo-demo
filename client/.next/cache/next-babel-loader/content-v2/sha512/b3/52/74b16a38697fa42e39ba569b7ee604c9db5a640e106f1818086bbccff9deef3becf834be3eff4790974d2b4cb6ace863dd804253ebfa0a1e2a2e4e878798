{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/sandeeppasunuri/workspace/next-apollo-demo/client/app/components/templates/users-list-loaded.tsx\";\nimport { useReducer, useCallback } from 'react';\nimport { LOAD_SIZE } from '../../constants';\nimport { UsersList, LoadMoreButton, PageTitle } from \"../modules\";\n\nconst userReducer = (state = [], {\n  type,\n  payload\n}) => {\n  const strategy = {\n    default: () => state,\n    loadMore: () => [...state, ...payload]\n  };\n  return strategy[type] ? strategy[type]() : strategy.default();\n};\n\nconst UsersListLoaded = ({\n  users: {\n    result,\n    count\n  }\n}) => {\n  const {\n    0: data,\n    1: setData\n  } = useReducer(userReducer, [...result.slice(0, LOAD_SIZE)]);\n  const hasMore = data.length < count;\n  const loadMore = useCallback(() => setData({\n    type: 'loadMore',\n    payload: [...result.slice(data.length, data.length + LOAD_SIZE)]\n  }), [setData, result, data]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PageTitle, {\n      title: \"Users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(UsersList, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), hasMore && /*#__PURE__*/_jsxDEV(LoadMoreButton, {\n      loadMore: loadMore\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true);\n};\n\nexport default UsersListLoaded;","map":{"version":3,"sources":["/Users/sandeeppasunuri/workspace/next-apollo-demo/client/app/components/templates/users-list-loaded.tsx"],"names":["useReducer","useCallback","LOAD_SIZE","UsersList","LoadMoreButton","PageTitle","userReducer","state","type","payload","strategy","default","loadMore","UsersListLoaded","users","result","count","data","setData","slice","hasMore","length"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,WAArB,QAAwC,OAAxC;AAEA,SAASC,SAAT,QAA0B,iBAA1B;AACA,SAASC,SAAT,EAAoBC,cAApB,EAAoCC,SAApC,QAAoD,YAApD;;AAEA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAG,EAAT,EAAa;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAb,KAAmC;AACnD,QAAMC,QAAQ,GAAG;AACbC,IAAAA,OAAO,EAAE,MAAMJ,KADF;AAEbK,IAAAA,QAAQ,EAAE,MAAM,CAAC,GAAGL,KAAJ,EAAW,GAAGE,OAAd;AAFH,GAAjB;AAIA,SAAOC,QAAQ,CAACF,IAAD,CAAR,GAAiBE,QAAQ,CAACF,IAAD,CAAR,EAAjB,GAAoCE,QAAQ,CAACC,OAAT,EAA3C;AACH,CAND;;AAQA,MAAME,eAAe,GAAG,CAAC;AAAEC,EAAAA,KAAK,EAAE;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV;AAAT,CAAD,KAAkD;AACtE,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBlB,UAAU,CAACM,WAAD,EAAc,CAAC,GAAGS,MAAM,CAACI,KAAP,CAAa,CAAb,EAAgBjB,SAAhB,CAAJ,CAAd,CAAlC;AAEA,QAAMkB,OAAO,GAAGH,IAAI,CAACI,MAAL,GAAcL,KAA9B;AAEA,QAAMJ,QAAQ,GAAGX,WAAW,CAAC,MAAMiB,OAAO,CAAC;AACvCV,IAAAA,IAAI,EAAE,UADiC;AAEvCC,IAAAA,OAAO,EAAE,CAAC,GAAGM,MAAM,CAACI,KAAP,CAAaF,IAAI,CAACI,MAAlB,EAA0BJ,IAAI,CAACI,MAAL,GAAcnB,SAAxC,CAAJ;AAF8B,GAAD,CAAd,EAGzB,CAACgB,OAAD,EAAUH,MAAV,EAAkBE,IAAlB,CAHyB,CAA5B;AAKA,sBACI;AAAA,4BACI,QAAC,SAAD;AAAW,MAAA,KAAK,EAAC;AAAjB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,SAAD;AAAW,MAAA,IAAI,EAAEA;AAAjB;AAAA;AAAA;AAAA;AAAA,YAFJ,EAGKG,OAAO,iBAAI,QAAC,cAAD;AAAgB,MAAA,QAAQ,EAAER;AAA1B;AAAA;AAAA;AAAA;AAAA,YAHhB;AAAA,kBADJ;AAOH,CAjBD;;AAmBA,eAAeC,eAAf","sourcesContent":["import { useReducer, useCallback } from 'react';\nimport { UsersListProps } from '../../types/user-types';\nimport { LOAD_SIZE } from '../../constants';\nimport { UsersList, LoadMoreButton, PageTitle} from \"../modules\";\n\nconst userReducer = (state = [], { type, payload }) => {\n    const strategy = {\n        default: () => state,\n        loadMore: () => [...state, ...payload]\n    };\n    return strategy[type] ? strategy[type]() : strategy.default();\n}\n\nconst UsersListLoaded = ({ users: { result, count } }: UsersListProps) => {\n    const [data, setData] = useReducer(userReducer, [...result.slice(0, LOAD_SIZE)]);\n\n    const hasMore = data.length < count;\n\n    const loadMore = useCallback(() => setData({\n        type: 'loadMore',\n        payload: [...result.slice(data.length, data.length + LOAD_SIZE)]\n    }),[setData, result, data]);\n\n    return (\n        <>\n            <PageTitle title=\"Users\" />\n            <UsersList data={data} />\n            {hasMore && <LoadMoreButton loadMore={loadMore} />}\n        </>\n    );\n};\n\nexport default UsersListLoaded;\n"]},"metadata":{},"sourceType":"module"}