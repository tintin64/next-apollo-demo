{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sandeeppasunuri/workspace/next-apollo-demo/client/pages/users.tsx\",\n    _this = this;\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport client from \"../app/apollo-client\";\nimport { usersQuery as query } from \"../app/queries/users/users\";\nimport { UsersListLoaded } from '../app/components/templates';\nimport { Grid } from \"../app/components/elements\";\n\nvar Users = function Users(_ref) {\n  var users = _ref.users;\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    children: /*#__PURE__*/_jsxDEV(UsersListLoaded, {\n      users: users\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, _this);\n};\n\nexport var getStaticProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n    var _yield$client$query, data;\n\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return client.query({\n              query: query\n            });\n\n          case 2:\n            _yield$client$query = _context.sent;\n            data = _yield$client$query.data;\n            return _context.abrupt(\"return\", {\n              props: {\n                users: data.users\n              }\n            });\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getStaticProps() {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport default Users;","map":{"version":3,"sources":["/Users/sandeeppasunuri/workspace/next-apollo-demo/client/pages/users.tsx"],"names":["client","usersQuery","query","UsersListLoaded","Grid","Users","users","getStaticProps","data","props"],"mappings":";;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,SAASC,UAAU,IAAIC,KAAvB,QAAoC,4BAApC;AAEA,SAAQC,eAAR,QAA+B,6BAA/B;AACA,SAAQC,IAAR,QAAmB,4BAAnB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ;AAAA,MAAGC,KAAH,QAAGA,KAAH;AAAA,sBACV,QAAC,IAAD;AAAA,2BACI,QAAC,eAAD;AAAiB,MAAA,KAAK,EAAEA;AAAxB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,WADU;AAAA,CAAd;;AAMA,OAAO,IAAMC,cAAc;AAAA,sEAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACHP,MAAM,CAACE,KAAP,CAAa;AAAEA,cAAAA,KAAK,EAALA;AAAF,aAAb,CADG;;AAAA;AAAA;AAClBM,YAAAA,IADkB,uBAClBA,IADkB;AAAA,6CAEnB;AACHC,cAAAA,KAAK,EAAE;AACHH,gBAAAA,KAAK,EAAEE,IAAI,CAACF;AADT;AADJ,aAFmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAdC,cAAc;AAAA;AAAA;AAAA,GAApB;AASP,eAAeF,KAAf","sourcesContent":["import client from \"../app/apollo-client\";\nimport { usersQuery as query } from \"../app/queries/users/users\";\nimport { UsersListProps } from \"../app/types/user-types\";\nimport {UsersListLoaded } from '../app/components/templates';\nimport {Grid} from \"../app/components/elements\";\n\nconst Users = ({ users }: UsersListProps) => (\n    <Grid>\n        <UsersListLoaded users={users} />\n    </Grid>\n);\n\nexport const getStaticProps = async () => {\n    const { data } = await client.query({ query });\n    return {\n        props: {\n            users: data.users\n        }\n    }\n};\n\nexport default Users;\n"]},"metadata":{},"sourceType":"module"}