{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/sandeeppasunuri/workspace/next-apollo-demo/client/pages/_document.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Document from 'next/document';\nimport { ServerStyleSheet } from 'styled-components'; //    <link href=\"https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,300;0,400;0,500;0,600;0,700;1,400;1,500;1,600&display=swap\" rel=\"stylesheet\">\n\nclass MyDocument extends Document {\n  static async getInitialProps(ctx) {\n    const sheet = new ServerStyleSheet();\n    const originalRenderPage = ctx.renderPage;\n\n    try {\n      ctx.renderPage = () => originalRenderPage({\n        enhanceApp: App => props => sheet.collectStyles( /*#__PURE__*/_jsxDEV(App, _objectSpread({}, props), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 65\n        }, this))\n      });\n\n      const initialProps = await Document.getInitialProps(ctx);\n      return _objectSpread(_objectSpread({}, initialProps), {}, {\n        styles: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [initialProps.styles, sheet.getStyleElement()]\n        }, void 0, true)\n      });\n    } finally {\n      sheet.seal({});\n    }\n  }\n\n}\n\nexport default MyDocument;","map":{"version":3,"sources":["/Users/sandeeppasunuri/workspace/next-apollo-demo/client/pages/_document.tsx"],"names":["Document","ServerStyleSheet","MyDocument","getInitialProps","ctx","sheet","originalRenderPage","renderPage","enhanceApp","App","props","collectStyles","initialProps","styles","getStyleElement","seal"],"mappings":";;;;;;;;;;AAAA,OAAOA,QAAP,MAAuD,eAAvD;AACA,SAAQC,gBAAR,QAA+B,mBAA/B,C,CAEA;;AACA,MAAMC,UAAN,SAAyBF,QAAzB,CAAkC;AAC9B,eAAaG,eAAb,CAA6BC,GAA7B,EAAkC;AAC9B,UAAMC,KAAK,GAAG,IAAIJ,gBAAJ,EAAd;AACA,UAAMK,kBAAkB,GAAGF,GAAG,CAACG,UAA/B;;AAEA,QAAI;AACAH,MAAAA,GAAG,CAACG,UAAJ,GAAiB,MAAMD,kBAAkB,CAAC;AACtCE,QAAAA,UAAU,EAAEC,GAAG,IAAIC,KAAK,IAAIL,KAAK,CAACM,aAAN,eAAoB,QAAC,GAAD,oBAASD,KAAT;AAAA;AAAA;AAAA;AAAA,gBAApB;AADU,OAAD,CAAzC;;AAIA,YAAME,YAAY,GAAG,MAAMZ,QAAQ,CAACG,eAAT,CAAyBC,GAAzB,CAA3B;AACA,6CACOQ,YADP;AAEIC,QAAAA,MAAM,eACF;AAAA,qBACKD,YAAY,CAACC,MADlB,EAEKR,KAAK,CAACS,eAAN,EAFL;AAAA;AAHR;AASH,KAfD,SAeU;AACNT,MAAAA,KAAK,CAACU,IAAN,CAAW,EAAX;AACH;AACJ;;AAvB6B;;AA0BlC,eAAeb,UAAf","sourcesContent":["import Document, { Html, Head, Main, NextScript } from 'next/document';\nimport {ServerStyleSheet} from 'styled-components'\n\n//    <link href=\"https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,300;0,400;0,500;0,600;0,700;1,400;1,500;1,600&display=swap\" rel=\"stylesheet\">\nclass MyDocument extends Document {\n    static async getInitialProps(ctx) {\n        const sheet = new ServerStyleSheet();\n        const originalRenderPage = ctx.renderPage;\n\n        try {\n            ctx.renderPage = () => originalRenderPage({\n                enhanceApp: App => props => sheet.collectStyles(<App {...props} />),\n            });\n\n            const initialProps = await Document.getInitialProps(ctx)\n            return {\n                ...initialProps,\n                styles: (\n                    <>\n                        {initialProps.styles}\n                        {sheet.getStyleElement()}\n                    </>\n                ),\n            }\n        } finally {\n            sheet.seal({});\n        }\n    }\n}\n\nexport default MyDocument;"]},"metadata":{},"sourceType":"module"}