{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/sandeeppasunuri/workspace/next-apollo-demo/client/pages/users.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useCallback, useEffect, useMemo } from 'react';\nimport { useQuery, gql } from \"@apollo/client\";\nimport { withApollo } from '@apollo/client/react/hoc';\nimport Link from 'next/link';\nimport Name from '../components/Name';\nconst QUERY = gql`\n    query Query($offset: Int, $limit: Int){\n        getAllUsers(offset:$offset, limit:$limit) {\n            count\n            result {\n                name,\n                email,\n                phone,\n                address {\n                    street,\n                    zipcode,\n                    city\n                }\n            }\n        }\n    }\n`;\n\nconst Page = () => {\n  const {\n    data,\n    loading,\n    error,\n    fetchMore,\n    client\n  } = useQuery(QUERY, {\n    variables: {\n      offset: 0,\n      limit: 10\n    }\n  });\n  useEffect(() => () => {\n    client.cache.modify({\n      fields: {\n        getAllUsers: value => _objectSpread(_objectSpread({}, value), {}, {\n          result: value.result.slice(0, 10)\n        })\n      }\n    });\n  }, [client]);\n  const loadMore = useCallback(() => fetchMore({\n    variables: {\n      offset: data.getAllUsers.result.length\n    }\n  }), [fetchMore, data]);\n  const loadedAll = useMemo(() => {\n    if (!data) return false;\n    return data.getAllUsers.count === data.getAllUsers.result.length;\n  }, [data]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"Failed to load...!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Welcome, \", /*#__PURE__*/_jsxDEV(Name, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), data.getAllUsers.result.length, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), data.getAllUsers.count, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      href: \"/\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        children: \"Go Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 28\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), !loadedAll && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: loadMore,\n      children: \"Load more\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 29\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n\nexport default withApollo(Page);","map":{"version":3,"sources":["/Users/sandeeppasunuri/workspace/next-apollo-demo/client/pages/users.tsx"],"names":["useCallback","useEffect","useMemo","useQuery","gql","withApollo","Link","Name","QUERY","Page","data","loading","error","fetchMore","client","variables","offset","limit","cache","modify","fields","getAllUsers","value","result","slice","loadMore","length","loadedAll","count"],"mappings":";;;;;;;;;AAAA,SAASA,WAAT,EAAsBC,SAAtB,EAAiCC,OAAjC,QAAgD,OAAhD;AACA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AAEA,MAAMC,KAAK,GAAGJ,GAAI;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAhBA;;AAkBA,MAAMK,IAAI,GAAG,MAAM;AACf,QAAM;AACFC,IAAAA,IADE;AACIC,IAAAA,OADJ;AACaC,IAAAA,KADb;AACoBC,IAAAA,SADpB;AAC+BC,IAAAA;AAD/B,MAEFX,QAAQ,CACRK,KADQ,EAER;AACIO,IAAAA,SAAS,EAAE;AACPC,MAAAA,MAAM,EAAE,CADD;AAEPC,MAAAA,KAAK,EAAE;AAFA;AADf,GAFQ,CAFZ;AAYAhB,EAAAA,SAAS,CAAC,MAAM,MAAM;AAClBa,IAAAA,MAAM,CAACI,KAAP,CAAaC,MAAb,CAAoB;AAChBC,MAAAA,MAAM,EAAE;AACJC,QAAAA,WAAW,EAAGC,KAAD,oCACNA,KADM;AAETC,UAAAA,MAAM,EAAED,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmB,CAAnB,EAAsB,EAAtB;AAFC;AADT;AADQ,KAApB;AAQH,GATQ,EASN,CAACV,MAAD,CATM,CAAT;AAWA,QAAMW,QAAQ,GAAGzB,WAAW,CACxB,MAAMa,SAAS,CAAC;AAAEE,IAAAA,SAAS,EAAE;AAAEC,MAAAA,MAAM,EAAEN,IAAI,CAACW,WAAL,CAAiBE,MAAjB,CAAwBG;AAAlC;AAAb,GAAD,CADS,EAExB,CAACb,SAAD,EAAYH,IAAZ,CAFwB,CAA5B;AAKA,QAAMiB,SAAS,GAAGzB,OAAO,CACrB,MAAM;AACF,QAAI,CAACQ,IAAL,EAAW,OAAO,KAAP;AACX,WAAOA,IAAI,CAACW,WAAL,CAAiBO,KAAjB,KAA2BlB,IAAI,CAACW,WAAL,CAAiBE,MAAjB,CAAwBG,MAA1D;AACH,GAJoB,EAKrB,CAAChB,IAAD,CALqB,CAAzB;AAQA,MAAIC,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAEb,MAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAEX,sBACI;AAAA,yCACa,QAAC,IAAD;AAAM,MAAA,IAAI,EAAEF;AAAZ;AAAA;AAAA;AAAA;AAAA,YADb,eAEI;AAAA;AAAA;AAAA;AAAA,YAFJ,EAGKA,IAAI,CAACW,WAAL,CAAiBE,MAAjB,CAAwBG,MAH7B,eAII;AAAA;AAAA;AAAA;AAAA,YAJJ,EAKKhB,IAAI,CAACW,WAAL,CAAiBO,KALtB,eAMI;AAAA;AAAA;AAAA;AAAA,YANJ,eAOI;AAAA;AAAA;AAAA;AAAA,YAPJ,eASI,QAAC,IAAD;AAAM,MAAA,IAAI,EAAC,GAAX;AAAA,6BAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAf;AAAA;AAAA;AAAA;AAAA,YATJ,EAUM,CAACD,SAAD,iBAAc;AAAQ,MAAA,OAAO,EAAEF,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVpB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CAvDD;;AAyDA,eAAepB,UAAU,CAACI,IAAD,CAAzB","sourcesContent":["import { useCallback, useEffect, useMemo } from 'react';\nimport { useQuery, gql } from \"@apollo/client\";\nimport { withApollo } from '@apollo/client/react/hoc';\nimport Link from 'next/link'\nimport Name from '../components/Name'\n\nconst QUERY = gql`\n    query Query($offset: Int, $limit: Int){\n        getAllUsers(offset:$offset, limit:$limit) {\n            count\n            result {\n                name,\n                email,\n                phone,\n                address {\n                    street,\n                    zipcode,\n                    city\n                }\n            }\n        }\n    }\n`;\n\nconst Page = () => {\n    const {\n        data, loading, error, fetchMore, client\n    } = useQuery(\n        QUERY,\n        {\n            variables: {\n                offset: 0,\n                limit: 10\n            }\n        }\n    );\n\n    useEffect(() => () => {\n        client.cache.modify({\n            fields: {\n                getAllUsers: (value) => ({\n                    ...value,\n                    result: value.result.slice(0, 10)\n                })\n            }\n        });\n    }, [client]);\n\n    const loadMore = useCallback(\n        () => fetchMore({ variables: { offset: data.getAllUsers.result.length } }),\n        [fetchMore, data]\n    );\n\n    const loadedAll = useMemo(\n        () => {\n            if (!data) return false;\n            return data.getAllUsers.count === data.getAllUsers.result.length\n        },\n        [data]\n    );\n\n    if (loading) return <h2>Loading...</h2>;\n\n    if (error) return <h2>Failed to load...!</h2>;\n\n    return (\n        <div>\n            Welcome, <Name data={data} />\n            <br/>\n            {data.getAllUsers.result.length}\n            <br/>\n            {data.getAllUsers.count}\n            <br/>\n            <br/>\n\n            <Link href=\"/\"><a>Go Back</a></Link>\n            { !loadedAll && <button onClick={loadMore}>Load more</button>}\n        </div>\n    )\n};\n\nexport default withApollo(Page);\n"]},"metadata":{},"sourceType":"module"}