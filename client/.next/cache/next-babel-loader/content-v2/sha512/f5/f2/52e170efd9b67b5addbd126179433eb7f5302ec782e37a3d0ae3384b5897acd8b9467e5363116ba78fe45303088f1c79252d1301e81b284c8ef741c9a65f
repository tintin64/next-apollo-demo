{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/sandeeppasunuri/workspace/next-apollo-demo/client/components/templates/users-list-gql-pagination.tsx\";\nimport { useMemo } from 'react';\nimport { withApollo } from '@apollo/client/react/hoc';\nimport { default as LinkTo } from 'next/link';\nimport { Grid, Column, Row, Heading1, UserCard, Button, Link } from '../elements';\nimport useCustomQuery from \"../../hooks/useCustomQuery\";\nimport { usersQuery } from '../../queries/users/users';\nimport { LOAD_SIZE } from '../../constants';\n\nconst UsersList = () => {\n  const options = {\n    variables: {\n      offset: 0,\n      limit: LOAD_SIZE\n    },\n    fetchPolicy: 'network-only'\n  };\n  const [data, loading, error, loadMore] = useCustomQuery(usersQuery, options);\n  const hasMore = useMemo(() => {\n    if (!data) return false;\n    return data.users.count !== data.users.result.length;\n  }, [data]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"Failed to load...!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 23\n  }, this);\n  const {\n    users: {\n      result\n    }\n  } = data;\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Column, {\n        className: \"mt-4\",\n        children: /*#__PURE__*/_jsxDEV(Heading1, {\n          children: [/*#__PURE__*/_jsxDEV(LinkTo, {\n            href: \"/\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              title: \"Home\",\n              children: \"Home\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 42\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this), \"/ Users with GraphQL pagination\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: result.map(user => /*#__PURE__*/_jsxDEV(Column, {\n        medium: 6,\n        children: /*#__PURE__*/_jsxDEV(UserCard, {\n          user: user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this)\n      }, user.phone, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), hasMore && /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Column, {\n        style: {\n          textAlign: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: loadMore,\n          className: \"my-4 ml-auto\",\n          children: \"Load more\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\nexport default withApollo(UsersList);","map":{"version":3,"sources":["/Users/sandeeppasunuri/workspace/next-apollo-demo/client/components/templates/users-list-gql-pagination.tsx"],"names":["useMemo","withApollo","default","LinkTo","Grid","Column","Row","Heading1","UserCard","Button","Link","useCustomQuery","usersQuery","LOAD_SIZE","UsersList","options","variables","offset","limit","fetchPolicy","data","loading","error","loadMore","hasMore","users","count","result","length","map","user","phone","textAlign"],"mappings":";;AAAA,SAAQA,OAAR,QAAsB,OAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,OAAO,IAAIC,MAApB,QAAkC,WAAlC;AACA,SACIC,IADJ,EACUC,MADV,EACkBC,GADlB,EACuBC,QADvB,EACiCC,QADjC,EAC2CC,MAD3C,EACmDC,IADnD,QAEO,aAFP;AAGA,OAAOC,cAAP,MAA2B,4BAA3B;AACA,SAASC,UAAT,QAA2B,2BAA3B;AACA,SAASC,SAAT,QAA0B,iBAA1B;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACpB,QAAMC,OAAO,GAAG;AACZC,IAAAA,SAAS,EAAE;AACPC,MAAAA,MAAM,EAAE,CADD;AAEPC,MAAAA,KAAK,EAAEL;AAFA,KADC;AAKZM,IAAAA,WAAW,EAAE;AALD,GAAhB;AAOA,QAAM,CAACC,IAAD,EAAOC,OAAP,EAAgBC,KAAhB,EAAuBC,QAAvB,IAAmCZ,cAAc,CAACC,UAAD,EAAaG,OAAb,CAAvD;AAEA,QAAMS,OAAO,GAAGxB,OAAO,CACnB,MAAM;AACF,QAAI,CAACoB,IAAL,EAAW,OAAO,KAAP;AACX,WAAOA,IAAI,CAACK,KAAL,CAAWC,KAAX,KAAqBN,IAAI,CAACK,KAAL,CAAWE,MAAX,CAAkBC,MAA9C;AACH,GAJkB,EAKnB,CAACR,IAAD,CALmB,CAAvB;AAQA,MAAIC,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAEb,MAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAEX,QAAM;AAAEG,IAAAA,KAAK,EAAE;AAAEE,MAAAA;AAAF;AAAT,MAAwBP,IAA9B;AAEA,sBACI,QAAC,IAAD;AAAA,4BACI,QAAC,GAAD;AAAA,6BACI,QAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,MAAlB;AAAA,+BACI,QAAC,QAAD;AAAA,kCACI,QAAC,MAAD;AAAQ,YAAA,IAAI,EAAC,GAAb;AAAA,mCAAiB,QAAC,IAAD;AAAM,cAAA,KAAK,EAAC,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAjB;AAAA;AAAA;AAAA;AAAA,kBADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eASI;AAAA;AAAA;AAAA;AAAA,YATJ,eAUI,QAAC,GAAD;AAAA,gBACKO,MAAM,CAACE,GAAP,CAAWC,IAAI,iBACZ,QAAC,MAAD;AAAQ,QAAA,MAAM,EAAE,CAAhB;AAAA,+BACI,QAAC,QAAD;AAAU,UAAA,IAAI,EAAEA;AAAhB;AAAA;AAAA;AAAA;AAAA;AADJ,SAAwBA,IAAI,CAACC,KAA7B;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YAVJ,EAiBKP,OAAO,iBACJ,QAAC,GAAD;AAAA,6BACI,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAE;AAAEQ,UAAAA,SAAS,EAAE;AAAb,SAAf;AAAA,+BACI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAET,QAAjB;AAA2B,UAAA,SAAS,EAAC,cAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAlBR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA2BH,CAnDD;;AAqDA,eAAetB,UAAU,CAACa,SAAD,CAAzB","sourcesContent":["import {useMemo} from 'react';\nimport { withApollo } from '@apollo/client/react/hoc';\nimport { default as LinkTo } from 'next/link'\nimport {\n    Grid, Column, Row, Heading1, UserCard, Button, Link\n} from '../elements';\nimport useCustomQuery from \"../../hooks/useCustomQuery\";\nimport { usersQuery } from '../../queries/users/users';\nimport { LOAD_SIZE } from '../../constants';\n\nconst UsersList = () => {\n    const options = {\n        variables: {\n            offset: 0,\n            limit: LOAD_SIZE\n        },\n        fetchPolicy: 'network-only'\n    };\n    const [data, loading, error, loadMore] = useCustomQuery(usersQuery, options);\n\n    const hasMore = useMemo(\n        () => {\n            if (!data) return false;\n            return data.users.count !== data.users.result.length\n        },\n        [data]\n    );\n\n    if (loading) return <h2>Loading...</h2>;\n\n    if (error) return <h2>Failed to load...!</h2>;\n\n    const { users: { result } } = data;\n\n    return (\n        <Grid>\n            <Row>\n                <Column className=\"mt-4\">\n                    <Heading1>\n                        <LinkTo href=\"/\"><Link title=\"Home\">Home</Link></LinkTo>\n                        / Users with GraphQL pagination\n                    </Heading1>\n                </Column>\n            </Row>\n            <br />\n            <Row>\n                {result.map(user => (\n                    <Column medium={6} key={user.phone}>\n                        <UserCard user={user} />\n                    </Column>\n                ))}\n            </Row>\n            {hasMore && (\n                <Row>\n                    <Column style={{ textAlign: 'center' }}>\n                        <Button onClick={loadMore} className=\"my-4 ml-auto\">Load more</Button>\n                    </Column>\n                </Row>\n            )}\n        </Grid>\n    )\n};\n\nexport default withApollo(UsersList);\n"]},"metadata":{},"sourceType":"module"}