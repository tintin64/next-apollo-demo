{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/sandeeppasunuri/workspace/next-apollo-demo/client/pages/index.js\";\nimport { useState, useEffect } from 'react';\nimport { useQuery, gql } from \"@apollo/client\";\nimport Link from 'next/link';\nimport Name from '../components/Name';\nconst QUERY = gql`\n    query Query($offset: Int, $limit: Int){\n        getAllUsers(offset:$offset, limit:$limit) {\n            name,\n            email,\n            phone,\n            address {\n                street,\n                zipcode,\n                city\n            }\n        }\n    }\n`;\n\nconst Page = () => {\n  const {\n    0: offset,\n    1: setOffset\n  } = useState(0);\n  const {\n    data,\n    loading,\n    error,\n    fetchMore\n  } = useQuery(QUERY, {\n    variables: {\n      offset,\n      limit: 10\n    }\n  });\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (error) {\n    console.error(error);\n    return null;\n  }\n\n  useEffect(() => {\n    fetchMore({\n      variables: {\n        offset\n      }\n    }).then(data => console.log(data));\n  }, [offset]);\n\n  const loadMore = () => setOffset(offset + 10);\n\n  console.log(data.getAllUsers);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Welcome, \", /*#__PURE__*/_jsxDEV(Name, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      href: \"/about\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        children: \"About\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 33\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: loadMore,\n      children: \"Load more\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\nexport default Page;","map":{"version":3,"sources":["/Users/sandeeppasunuri/workspace/next-apollo-demo/client/pages/index.js"],"names":["useState","useEffect","useQuery","gql","Link","Name","QUERY","Page","offset","setOffset","data","loading","error","fetchMore","variables","limit","console","then","log","loadMore","getAllUsers"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AAEA,MAAMC,KAAK,GAAGH,GAAI;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAbA;;AAeA,MAAMI,IAAI,GAAG,MAAM;AACf,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsBT,QAAQ,CAAC,CAAD,CAApC;AACA,QAAM;AAAEU,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA,KAAjB;AAAwBC,IAAAA;AAAxB,MAAsCX,QAAQ,CAChDI,KADgD,EAEhD;AACIQ,IAAAA,SAAS,EAAE;AACPN,MAAAA,MADO;AAEPO,MAAAA,KAAK,EAAE;AAFA;AADf,GAFgD,CAApD;;AAUA,MAAIJ,OAAJ,EAAa;AACT,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,MAAIC,KAAJ,EAAW;AACPI,IAAAA,OAAO,CAACJ,KAAR,CAAcA,KAAd;AACA,WAAO,IAAP;AACH;;AAEDX,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,SAAS,CAAC;AAAEC,MAAAA,SAAS,EAAE;AAAEN,QAAAA;AAAF;AAAb,KAAD,CAAT,CACKS,IADL,CACWP,IAAD,IAAUM,OAAO,CAACE,GAAR,CAAYR,IAAZ,CADpB;AAEH,GAHQ,EAGN,CAACF,MAAD,CAHM,CAAT;;AAKA,QAAMW,QAAQ,GAAG,MAAMV,SAAS,CAACD,MAAM,GAAG,EAAV,CAAhC;;AAEAQ,EAAAA,OAAO,CAACE,GAAR,CAAYR,IAAI,CAACU,WAAjB;AACA,sBACI;AAAA,yCACa,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,YADb,eAEI;AAAA;AAAA;AAAA;AAAA,YAFJ,eAES;AAAA;AAAA;AAAA;AAAA,YAFT,eAGI,QAAC,IAAD;AAAM,MAAA,IAAI,EAAC,QAAX;AAAA,6BAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAApB;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAQ,MAAA,OAAO,EAAED,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CArCD;;AAuCA,eAAeZ,IAAf","sourcesContent":["import { useState, useEffect } from 'react';\nimport { useQuery, gql } from \"@apollo/client\";\nimport Link from 'next/link'\nimport Name from '../components/Name'\n\nconst QUERY = gql`\n    query Query($offset: Int, $limit: Int){\n        getAllUsers(offset:$offset, limit:$limit) {\n            name,\n            email,\n            phone,\n            address {\n                street,\n                zipcode,\n                city\n            }\n        }\n    }\n`;\n\nconst Page = () => {\n    const [offset, setOffset] = useState(0);\n    const { data, loading, error, fetchMore } = useQuery(\n        QUERY,\n        {\n            variables: {\n                offset,\n                limit: 10\n            }\n        }\n    );\n\n    if (loading) {\n        return <h2>Loading...</h2>;\n    }\n\n    if (error) {\n        console.error(error);\n        return null;\n    }\n\n    useEffect(() => {\n        fetchMore({ variables: { offset } })\n            .then((data) => console.log(data));\n    }, [offset])\n\n    const loadMore = () => setOffset(offset + 10);\n\n    console.log(data.getAllUsers);\n    return (\n        <div>\n            Welcome, <Name />\n            <br/><br/>\n            <Link href=\"/about\"><a>About</a></Link>\n            <button onClick={loadMore}>Load more</button>\n        </div>\n    )\n};\n\nexport default Page;\n"]},"metadata":{},"sourceType":"module"}